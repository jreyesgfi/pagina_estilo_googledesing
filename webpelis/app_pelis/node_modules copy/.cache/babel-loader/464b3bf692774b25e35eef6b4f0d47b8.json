{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programacion\\\\React\\\\primer_proyecto\\\\webpeliculas\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Pelicula from './Pelicula';\nimport PageWrapper from './PageWrapper';\nimport peliculasJson from './peliculas.json';\nimport { useState } from 'react';\nimport Paginacion from './Paginacion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [paginaActual, setPaginaActual] = useState(1);\n  let peliculas = peliculasJson; //Buscar las peliculas en un servidor\n\n  const buscarPeliculas = async () => {\n    let url = 'https://lucasmoy.dev/data/react/peliculas.json';\n\n    try {\n      const response = await fetch(url); //console.log(response.status);\n\n      if (response.status === 200) setMovies(await response.json());\n    } catch (error) {\n      console.log(error);\n    }\n  }; //Se puede hacer que la función espere\n\n  /* async ()=>{\n   var resultado = await fetch(url,...)*/\n\n\n  buscarPeliculas();\n\n  function setMovies(data) {\n    console.log(data);\n  } //Mostramos un número limitado de películas por página\n\n\n  const pelPorPag = 2;\n\n  let cargarPeliculas = () => peliculas.slice((paginaActual - 1) * pelPorPag, paginaActual * pelPorPag); //Número de páginas necesarias\n\n\n  const getTotalPaginas = () => Math.ceil(peliculasJson.length / pelPorPag);\n\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    children: [cargarPeliculas().map(pelicula => /*#__PURE__*/_jsxDEV(Pelicula, {\n      titulo: pelicula.titulo,\n      year: pelicula.year,\n      calificacion: pelicula.calificacion,\n      img: pelicula.img,\n      director: pelicula.director,\n      actores: pelicula.actores,\n      fecha: pelicula.fecha,\n      duracion: pelicula.duracion,\n      children: pelicula.descripcion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Paginacion, {\n      pagina: paginaActual,\n      total: getTotalPaginas(),\n      onChange: pagina => {\n        setPaginaActual(pagina);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"MDHN3/6qklJglvODVA3BrdJr8yA=\");\n\n_c = App;\nexport default App();\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Programacion/React/primer_proyecto/webpeliculas/src/App.js"],"names":["Pelicula","PageWrapper","peliculasJson","useState","Paginacion","App","paginaActual","setPaginaActual","peliculas","buscarPeliculas","url","response","fetch","status","setMovies","json","error","console","log","data","pelPorPag","cargarPeliculas","slice","getTotalPaginas","Math","ceil","length","map","pelicula","titulo","year","calificacion","img","director","actores","fecha","duracion","descripcion","pagina"],"mappings":";;;;AACA,OAAO,WAAP;AACA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,CAAD,CAAhD;AAEA,MAAIK,SAAS,GAAGN,aAAhB,CAHa,CAKb;;AACA,QAAMO,eAAe,GAAG,YAAY;AAClC,QAAIC,GAAG,GAAG,gDAAV;;AACA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B,CADE,CAEF;;AACA,UAAGC,QAAQ,CAACE,MAAT,KAAoB,GAAvB,EACEC,SAAS,CAAC,MAAMH,QAAQ,CAACI,IAAT,EAAP,CAAT;AACH,KALD,CAKE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAVD,CANa,CAkBb;;AACA;AACF;;;AAEEP,EAAAA,eAAe;;AACf,WAASK,SAAT,CAAmBK,IAAnB,EAAwB;AACtBF,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACD,GAzBY,CA2Bb;;;AACA,QAAMC,SAAS,GAAG,CAAlB;;AACA,MAAIC,eAAe,GAAG,MACpBb,SAAS,CAACc,KAAV,CACE,CAAChB,YAAY,GAAG,CAAhB,IAAqBc,SADvB,EAEEd,YAAY,GAAGc,SAFjB,CADF,CA7Ba,CAoCb;;;AACA,QAAMG,eAAe,GAAG,MAAOC,IAAI,CAACC,IAAL,CAAUvB,aAAa,CAACwB,MAAd,GAAuBN,SAAjC,CAA/B;;AAGA,sBACE,QAAC,WAAD;AAAA,eACGC,eAAe,GAAGM,GAAlB,CAAsBC,QAAQ,iBAC7B,QAAC,QAAD;AAAU,MAAA,MAAM,EAAEA,QAAQ,CAACC,MAA3B;AAAmC,MAAA,IAAI,EAAED,QAAQ,CAACE,IAAlD;AAAwD,MAAA,YAAY,EAAEF,QAAQ,CAACG,YAA/E;AAA6F,MAAA,GAAG,EAAEH,QAAQ,CAACI,GAA3G;AACE,MAAA,QAAQ,EAAEJ,QAAQ,CAACK,QADrB;AAC+B,MAAA,OAAO,EAAEL,QAAQ,CAACM,OADjD;AAC0D,MAAA,KAAK,EAAEN,QAAQ,CAACO,KAD1E;AACiF,MAAA,QAAQ,EAAEP,QAAQ,CAACQ,QADpG;AAAA,gBAEGR,QAAQ,CAACS;AAFZ;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAOE,QAAC,UAAD;AAAY,MAAA,MAAM,EAAE/B,YAApB;AAAkC,MAAA,KAAK,EAAEiB,eAAe,EAAxD;AAA4D,MAAA,QAAQ,EAAGe,MAAD,IAAY;AAAE/B,QAAAA,eAAe,CAAC+B,MAAD,CAAf;AAA0B;AAA9G;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GApDQjC,G;;KAAAA,G;AAqDT,eAAeA,GAAG,EAAlB","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Pelicula from './Pelicula';\nimport PageWrapper from './PageWrapper';\nimport peliculasJson from './peliculas.json'\nimport { useState } from 'react';\nimport Paginacion from './Paginacion';\n\n\n\nfunction App() {\n  const [paginaActual, setPaginaActual] = useState(1);\n\n  let peliculas = peliculasJson;\n\n  //Buscar las peliculas en un servidor\n  const buscarPeliculas = async () => {\n    let url = 'https://lucasmoy.dev/data/react/peliculas.json';\n    try {\n      const response = await fetch(url);\n      //console.log(response.status);\n      if(response.status === 200)\n        setMovies(await response.json());\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //Se puede hacer que la función espere\n  /* async ()=>{\n   var resultado = await fetch(url,...)*/\n\n  buscarPeliculas();\n  function setMovies(data){\n    console.log(data);\n  }\n\n  //Mostramos un número limitado de películas por página\n  const pelPorPag = 2;\n  let cargarPeliculas = () =>\n    peliculas.slice(\n      (paginaActual - 1) * pelPorPag,\n      paginaActual * pelPorPag\n    );\n\n\n  //Número de páginas necesarias\n  const getTotalPaginas = () => (Math.ceil(peliculasJson.length / pelPorPag))\n\n\n  return (\n    <PageWrapper>\n      {cargarPeliculas().map(pelicula =>\n        <Pelicula titulo={pelicula.titulo} year={pelicula.year} calificacion={pelicula.calificacion} img={pelicula.img}\n          director={pelicula.director} actores={pelicula.actores} fecha={pelicula.fecha} duracion={pelicula.duracion}>\n          {pelicula.descripcion}\n        </Pelicula>\n      )}\n      <Paginacion pagina={paginaActual} total={getTotalPaginas()} onChange={(pagina) => { setPaginaActual(pagina); }} />\n\n    </PageWrapper>\n  )\n}\nexport default App();"]},"metadata":{},"sourceType":"module"}